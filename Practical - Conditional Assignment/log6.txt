ID: 1
Execution stack: [(Ref(int) v;(New(v, 20);(Ref(Ref(int)) a;(New(a, v);(print(v);print(a))))))]
Symbol table: {}
Output list: []
File table:{}
Heap memory:{}

ID: 1
Execution stack: [(New(v, 20);(Ref(Ref(int)) a;(New(a, v);(print(v);print(a))))), Ref(int) v]
Symbol table: {}
Output list: []
File table:{}
Heap memory:{}

ID: 1
Execution stack: [(New(v, 20);(Ref(Ref(int)) a;(New(a, v);(print(v);print(a))))), Ref(int) v]
Symbol table: {}
Output list: []
File table:{}
Heap memory:{}

ID: 1
Execution stack: [(New(v, 20);(Ref(Ref(int)) a;(New(a, v);(print(v);print(a)))))]
Symbol table: {v=(0, int)}
Output list: []
File table:{}
Heap memory:{}

ID: 1
Execution stack: [(New(v, 20);(Ref(Ref(int)) a;(New(a, v);(print(v);print(a)))))]
Symbol table: {v=(0, int)}
Output list: []
File table:{}
Heap memory:{}

ID: 1
Execution stack: [(Ref(Ref(int)) a;(New(a, v);(print(v);print(a)))), New(v, 20)]
Symbol table: {v=(0, int)}
Output list: []
File table:{}
Heap memory:{}

ID: 1
Execution stack: [(Ref(Ref(int)) a;(New(a, v);(print(v);print(a)))), New(v, 20)]
Symbol table: {v=(0, int)}
Output list: []
File table:{}
Heap memory:{}

ID: 1
Execution stack: [(Ref(Ref(int)) a;(New(a, v);(print(v);print(a))))]
Symbol table: {v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20}

ID: 1
Execution stack: [(Ref(Ref(int)) a;(New(a, v);(print(v);print(a))))]
Symbol table: {v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20}

ID: 1
Execution stack: [(New(a, v);(print(v);print(a))), Ref(Ref(int)) a]
Symbol table: {v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20}

ID: 1
Execution stack: [(New(a, v);(print(v);print(a))), Ref(Ref(int)) a]
Symbol table: {v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20}

ID: 1
Execution stack: [(New(a, v);(print(v);print(a)))]
Symbol table: {a=(0, Ref(int)), v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20}

ID: 1
Execution stack: [(New(a, v);(print(v);print(a)))]
Symbol table: {a=(0, Ref(int)), v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20}

ID: 1
Execution stack: [(print(v);print(a)), New(a, v)]
Symbol table: {a=(0, Ref(int)), v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20}

ID: 1
Execution stack: [(print(v);print(a)), New(a, v)]
Symbol table: {a=(0, Ref(int)), v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20}

ID: 1
Execution stack: [(print(v);print(a))]
Symbol table: {a=(2, Ref(int)), v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20, 2=(1, int)}

ID: 1
Execution stack: [(print(v);print(a))]
Symbol table: {a=(2, Ref(int)), v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20, 2=(1, int)}

ID: 1
Execution stack: [print(a), print(v)]
Symbol table: {a=(2, Ref(int)), v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20, 2=(1, int)}

ID: 1
Execution stack: [print(a), print(v)]
Symbol table: {a=(2, Ref(int)), v=(1, int)}
Output list: []
File table:{}
Heap memory:{1=20, 2=(1, int)}

ID: 1
Execution stack: [print(a)]
Symbol table: {a=(2, Ref(int)), v=(1, int)}
Output list: [(1, int)]
File table:{}
Heap memory:{1=20, 2=(1, int)}

ID: 1
Execution stack: [print(a)]
Symbol table: {a=(2, Ref(int)), v=(1, int)}
Output list: [(1, int)]
File table:{}
Heap memory:{1=20, 2=(1, int)}

ID: 1
Execution stack: []
Symbol table: {a=(2, Ref(int)), v=(1, int)}
Output list: [(1, int), (2, Ref(int))]
File table:{}
Heap memory:{1=20, 2=(1, int)}

